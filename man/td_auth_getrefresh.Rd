% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/td_auth_getrefresh.R
\name{td_auth_getrefresh}
\alias{td_auth_getrefresh}
\title{Get a new Refresh Token using an existing Refresh Token}
\usage{
td_auth_getrefresh(refreshToken, consumerKey, verbose_output = FALSE)
}
\arguments{
\item{refreshToken}{An existing refresh token generated using td_auth_initrefresh or td_auth_getrefresh}

\item{consumerKey}{TD generated Consumer key associated with registered TD app}
}
\value{
refresh token that is valid for 90 days
}
\description{
A Refresh Token is used to generate an Access Token through the function
td_auth_getaccess. The initial Refresh Token must be generated manually 
using a URL specific to a registered app. Use td_auth_initurl to generate
an app specific URL and then use td_auth_initrefresh to process the 
authorization code and generate the initial refresh token. The refresh token
will expire every 90 days. This function uses the current refresh token to 
generate a new refresh token, avoiding the manual process above.
}
\examples{
\dontrun{

### A valid refresh token can be fed into the function below for a new refresh token
refToken = td_auth_getrefresh('CurrentRefreshToken','CONSUMERKEY')

saveRDS(refToken,'/secure/location/')

}
}
